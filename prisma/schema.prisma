generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  
  email       String   @unique
  username    String   @unique
  password    String
  
  sessions    Sessions[]
  forum_posts ForumPosts[]
  user_likes  UserLikes[]
  
  forum_post_comments ForumPostComments[]
}

model Sessions {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  session         String   @unique
  
  session_created DateTime @db.Date
  session_expires DateTime @db.Date
  
  user_id         String   @db.ObjectId 
  user            Users    @relation(fields: [user_id], references: [id]) 
}

model Otp {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  email         String
  code          String
  code_expires  DateTime @db.Date
  used          Boolean  @default(false)

  @@index([email])
}

model ForumImages {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  file_name     String
  mime_type     String
  size          Int
  binary_blob   Bytes
  post_id       String @db.ObjectId
  post     ForumPosts    @relation(fields: [post_id], references: [id]) 
}

model ForumPosts {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  
  heading     String
  content     String 
  topic       String
  likes       Int     @default(0)

  author_name String  
  user        Users   @relation(fields: [author_name], references: [username])  
  
  user_likes  UserLikes[]
  images      ForumImages[]
  forum_post_comments ForumPostComments[] 
}

model UserLikes {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId

  user_id String  @db.ObjectId
  post_id String  @db.ObjectId

  user    Users       @relation(fields: [user_id], references: [id])
  post    ForumPosts  @relation(fields: [post_id], references: [id])

  @@unique([user_id, post_id])
}

model ForumPostComments {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  post_id     String  @db.ObjectId
  
  comment     String  
  author_name String 

  post        ForumPosts  @relation(fields: [post_id], references: [id])
  user        Users       @relation(fields: [author_name], references: [username])

}

model BlogPosts {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  heading String
  content String
}
